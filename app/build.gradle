apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
apply plugin: "de.mannodermaus.android-junit5"
apply plugin: 'com.google.gms.google-services'
apply plugin: 'io.fabric'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.b4kancs.scoutlaws"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 10
        versionName "0.1.9"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled = true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    dataBinding {
        enabled = true
    }
    buildToolsVersion "28.0.3"
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
    flavorDimensions "content"
    productFlavors {
        production {
            dimension "content"
        }
        espresso {
            dimension "content"
            minSdkVersion 26
        }
    }
    packagingOptions {
        exclude 'META-INF/LICENSE.md'
        exclude 'META-INF/LICENSE-notice.md'
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "androidx.appcompat:appcompat:$appcompat_version"
    implementation "androidx.cardview:cardview:$cardview_version"
    implementation "androidx.constraintlayout:constraintlayout:$constraint_version"
    implementation "androidx.preference:preference:$preference_version"
    implementation "com.google.android.material:material:$material_version"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
    // This fixes bug that caused support-library version conflict
    implementation "androidx.legacy:legacy-support-v4:$legacy_support_v4_version"

    // Dagger 2
    implementation "com.google.dagger:dagger-android:$dagger2_version"
    implementation "com.google.dagger:dagger-android-support:$dagger2_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger2_version"
    kapt "com.google.dagger:dagger-compiler:$dagger2_version"
    implementation "com.nex3z:flow-layout:$flow_layout_version"
    implementation "com.github.frankiesardo:linearlistview:$linear_list_version"

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    // AndroidX Testing Library's runner and rules
    androidTestImplementation "androidx.test:runner:$test_runner_version"
    androidTestImplementation "androidx.test:rules:$test_runner_version"

    testImplementation "androidx.arch.core:core-testing:$core_testing_version"

    // Espresso
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_version"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espresso_version"

    kaptTest "com.google.dagger:dagger-compiler:$dagger2_version"

    // Mockito
    testImplementation "org.mockito:mockito-inline:$mockito_version"
    androidTestImplementation "org.mockito:mockito-android:$mockito_version"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$mockito_kotlin_version"

    // Junit5
    testImplementation junit5.unitTests()
    androidTestImplementation junit5.instrumentationTests()

    // Firebase
    implementation "com.google.firebase:firebase-core:$firebase_core_version"
    implementation "com.crashlytics.sdk.android:crashlytics:$firebase_crashlytics_version"
}

repositories {
    mavenCentral()
}
